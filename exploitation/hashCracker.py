import hashlib
import threading
import queue


cracked_queue = queue.Queue()

def crack_hash(hash, hashType, wordList):
    hashedPass = None
    with open(wordList, 'r', encoding='latin-1') as wordList:
        for line in wordList:
            currentPass = line.strip()
            match hashType:
                case "md5": 
                    hashedPass = hashlib.md5(currentPass.encode("utf-8")).hexdigest()
                case "sha1": 
                    hashedPass = hashlib.sha1(currentPass.encode("utf-8")).hexdigest()
                case "sha256": 
                    hashedPass = hashlib.sha256(currentPass.encode("utf-8")).hexdigest()
                case "sha512": 
                    hashedPass = hashlib.sha512(currentPass.encode("utf-8")).hexdigest()
                case _: 
                    hashedPass = ""
            if hashedPass != "":
                if hashedPass == hash:
                    cracked_queue.put((hashedPass, currentPass))


def startHashCracker(wordList, hashList, hashType):
    with open(hashList, 'r', encoding='latin-1') as hashList:
        for line in hashList:
            currentHash = line.strip()
            threading.Thread(target=crack_hash, args=(currentHash, hashType, wordList), daemon=True).start()
    cracked_queue.put(("DONE", None))
